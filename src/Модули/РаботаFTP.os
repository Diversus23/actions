#Использовать logos
#Использовать 1connector
#Использовать ftp

Перем Лог;

Процедура ОписаниеКоманды(Команда) Экспорт

	Команда.Опция("server", "",
		"Имя FTP-сервера (обязательный)")
		.ТСтрока();

	Команда.Опция("login l", "",
		"Логин FTP-сервера. По умолчанию ""anonymous"" (необязательный)")
		.ТСтрока();

	Команда.Опция("password p", "",
		"Пароль FTP-сервера. По умолчанию ""anonymous"" (необязательный)")
		.ТСтрока();

	Команда.Опция("port", "",
		"Порт на FTP-сервере. Если не указано, то будет использован 21 порт (необязательный)")
		.ТЧисло();

	Команда.Опция("timeout t", "",
		"Таймаут подключения к FTP-серверу. По умолчанию - 30 секунд (необязательный)")
		.ТЧисло();

	
КонецПроцедуры

Функция НовоеFTPСоединение(Знач Настройки) Экспорт
	
	Возврат Новый FtpСоединение(
		Настройки.Сервер,
		Настройки.Порт,
		Настройки.ИмяПользователя,
		Настройки.Пароль, ,
		Истина,
		Настройки.Таймаут);
	
КонецФункции

Функция ПортПоУмолчанию() Экспорт

	Порт = 21;
	Возврат Порт;

КонецФункции

Функция ТаймаутПоУмолчанию() Экспорт

	Таймаут = 30;
	Возврат Таймаут;

КонецФункции

Функция ПолучениеФайлов(Знач Параметры) Экспорт
	
	Результат = Новый Массив();
	
	Лог.Информация("Начало загрузки файлов с FTP");
		
	Попытка
		FTPСоединение = НовоеFTPСоединение(Параметры);
		FTPСоединение.УстановитьТекущийКаталог(Параметры.ПутьНаСервере);
		Лог.Информация("Текущий каталог на сервере <%1>", Параметры.ПутьНаСервере);
	Исключение
		ОбщегоНазначения.ЗавершениеРаботыОшибка("Ошибка подключения к серверу FTP: %1", ОписаниеОшибки());
		Возврат Результат;
	КонецПопытки;
		
	МассивФайлов = FtpСоединение.НайтиФайлы(Параметры.ПутьНаСервере, Параметры.Маска, Параметры.Рекурсивно);
	Для Каждого ФайлНаСервере Из МассивФайлов Цикл

		ИмяФайла = ПреобразоватьВЛокальныйПуть(Параметры.ПутьНаСервере, 
			ФайлНаСервере.ПолноеИмя, Параметры.ПутьЛокально);
		НовыйФайл = Новый Файл(ИмяФайла);

		Если НЕ ФайловыеОперации.КаталогСуществует(НовыйФайл.Путь) Тогда
			ФайловыеОперации.ОбеспечитьКаталог(НовыйФайл.Путь);
		КонецЕсли;
		
		Лог.Информация("Начало получения файла <%1> << <%2>", ИмяФайла, ФайлНаСервере);
		Попытка
			FtpСоединение.Получить(ФайлНаСервере.ПолноеИмя, НовыйФайл.ПолноеИмя);
			Результат.Добавить(НовыйФайл.ПолноеИмя);
			Лог.Информация("Файл <%1> получен", НовыйФайл.ПолноеИмя);
		Исключение
			ОбщегоНазначения.ЗавершениеРаботыОшибка("Ошибка получения файла по FTP: %1", ОписаниеОшибки());
		КонецПопытки;

	КонецЦикла;
	
	Лог.Информация("Загружено %1 файлов", Результат.Количество());
	Лог.Информация("Завершение загрузки файлов с FTP");

	Возврат Результат;
		
КонецФункции

Функция ОтправкаФайлов(Знач Параметры) Экспорт

	Результат = Новый Массив();
	Лог.Информация("Начало передачи файлов каталога по FTP");	
	
	Попытка
		FTPСоединение = НовоеFTPСоединение(Параметры);
		FTPСоединение.УстановитьТекущийКаталог(Параметры.ПутьНаСервере);
		Лог.Информация("Текущий каталог на сервере <%1>", Параметры.ПутьНаСервере);
	Исключение
		ОбщегоНазначения.ЗавершениеРаботыОшибка("Ошибка подключения к серверу FTP: %1", ОписаниеОшибки());
		Возврат Результат;
	КонецПопытки;

	Файлы = НайтиФайлы(Параметры.ПутьЛокально, Параметры.Маска, Истина);	
	Для Каждого ЛокальныйФайл Из Файлы Цикл
		
		ФайлНаСервере = ЛокальныйПутьВFTP(Параметры.ПутьНаСервере, Параметры.ПутьЛокально, ЛокальныйФайл.ПолноеИмя);
		ПутьНаСервере = ПолучитьПутьФайлаНаFTP(ФайлНаСервере);

		// Если каталога, куда перемещаем не существует, создадим его
		Попытка
			FTPСоединение.СоздатьКаталог(ПутьНаСервере);
		Исключение
		КонецПопытки;		

		Лог.Информация("Начало отправки файла <%1> >> <%2>", ЛокальныйФайл.ПолноеИмя, ФайлНаСервере);
		Попытка
			FTPСоединение.Записать(ЛокальныйФайл.ПолноеИмя, ФайлНаСервере);
			Лог.Информация("Файл <%1> отправлен", ЛокальныйФайл.ПолноеИмя);
			Результат.Добавить(ФайлНаСервере);
		Исключение
			ОбщегоНазначения.ЗавершениеРаботыОшибка("Ошибка передачи файла по FTP: %1", ОписаниеОшибки());
		КонецПопытки;
		
	КонецЦикла;

	Лог.Информация("Передано %1 файлов", Результат.Количество());
	Лог.Информация("Завершение передачи файлов каталога по FTP");

	Возврат Результат;

КонецФункции

Процедура УдалениеФайлов(Знач Параметры) Экспорт

	Результат = Новый Массив();
	Лог.Информация("Начало удаления файлов на FTP");	
	
	Попытка
		FTPСоединение = НовоеFTPСоединение(Параметры);
		FTPСоединение.УстановитьТекущийКаталог(Параметры.ПутьНаСервере);
		Лог.Информация("Текущий каталог на сервере <%1>", Параметры.ПутьНаСервере);
	Исключение
		ОбщегоНазначения.ЗавершениеРаботыОшибка("Ошибка подключения к серверу FTP: %1", ОписаниеОшибки());
	КонецПопытки;

	Лог.Информация("Начало удаления файлов Путь <%1> Маска <%2>", Параметры.ПутьНаСервере, Параметры.Маска);
	Попытка
		FtpСоединение.Удалить(Параметры.ПутьНаСервере, Параметры.Маска);		
	Исключение
		ОбщегоНазначения.ЗавершениеРаботыОшибка("Ошибка удаления файлов на FTP: %1", ОписаниеОшибки());
	КонецПопытки;	
	Лог.Информация("Завершение удаление файлов на FTP");

КонецПроцедуры

Функция ПолучитьПутьФайлаНаFTP(Знач ИмяФайлаНаСервере)
	
	Индекс = СтрНайти(ИмяФайлаНаСервере, "/", НаправлениеПоиска.СКонца);
	Если Индекс > 0 Тогда
		Возврат Лев(ИмяФайлаНаСервере, Индекс);
	КонецЕсли;

	Возврат ИмяФайлаНаСервере;

КонецФункции

Функция ЛокальныйПутьВFTP(Знач ПутьНаСервере, Знач ПутьЛокально, Знач ПолноеИмя)

	// ПутьНаСервере = "/ChatGPT/"
	// ПутьЛокально = "C:\Temp\"
	// ПолноеИмя = "C:\Temp\Folder\2.txt"
	// ====
	// Результат	 = "/ChatGPT/Folder/2.txt"

	Лог.Отладка("ПутьНаСервере: %1
				|ПутьЛокально: %2
				|ПолноеИмя: %3", ПутьНаСервере, ПутьЛокально, ПолноеИмя);

	Результат = ПолноеИмя;
	Если СтрНачинаетсяС(Результат, ПутьЛокально) Тогда
		Результат = Сред(Результат, СтрДлина(ПутьЛокально) + 1);
	КонецЕсли;

	Лог.Отладка("Результат (удалили путь локально): %1", Результат);

	РазделительОС = ПолучитьРазделительПути();
	Если РазделительОС = "\" Тогда
		Результат = СтрЗаменить(Результат, "\", "/");
	КонецЕсли;

	Если НЕ ПустаяСтрока(Результат) Тогда
		Если СтрНачинаетсяС(Результат, "/") Тогда
			ИндексСКоторогоКопируем = 2;
			Результат = Сред(Результат, ИндексСКоторогоКопируем);
		КонецЕсли;
	КонецЕсли;

	Лог.Отладка("Результат (удалили разделитель): %1", Результат);

	Результат = ДополнитьРазделителемFTP(ПутьНаСервере) + Результат;
	
	Возврат Результат;

КонецФункции

Функция ПреобразоватьВЛокальныйПуть(Знач ПутьНаСервере, Знач ФайлНаСервере, Знач ЛокальныйПуть)

	// ПутьНаСервере = "/"
	// ФайлНаСервере = "/journalext/index.html"
	// ЛокальныйПуть = "C:\Temp"
	// ====
	// Результат	 = "C:\Temp\journalext\index.html"

	Лог.Отладка("ПутьНаСервере: %1
				|ФайлНаСервере: %2
				|ЛокальныйПуть: %3", ПутьНаСервере, ФайлНаСервере, ЛокальныйПуть);

	Результат = ФайлНаСервере;
	Если СтрНачинаетсяС(Результат, ПутьНаСервере) Тогда
		Результат = Сред(Результат, СтрДлина(ПутьНаСервере) + 1);
	КонецЕсли;

	Лог.Отладка("Результат (удалили путь на сервере): %1", Результат);

	РазделительОС = ПолучитьРазделительПути();
	Если РазделительОС <> "/" Тогда
		Результат = СтрЗаменить(Результат, "/", РазделительОС);
	КонецЕсли;
	
	Лог.Отладка("Результат (удалили разделитель): %1", Результат);

	Результат = ОбъединитьПути(ЛокальныйПуть, Результат);

	Возврат Результат;

КонецФункции

Функция ДополнитьРазделителемFTP(Стр)

	Если ПустаяСтрока(Стр) Тогда
		Возврат "/";
	КонецЕсли;

	Результат = Стр;
	Если НЕ СтрЗаканчиваетсяНа(Результат, "/") Тогда
		Результат = Результат + "/";
	КонецЕсли;

	Возврат Результат;

КонецФункции

Лог = ПараметрыСистемы.Лог();
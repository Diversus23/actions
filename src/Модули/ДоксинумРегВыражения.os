#Область СлужебныйПрограммныйИнтерфейс

// Заменить все вхождения.
// 
// Параметры:
//  ИсходнаяСтрока - Строка - Исходная строка
//  Шаблон - Строка - Шаблон регулярного выражения
//  ПодстрокаЗамены - Строка - Подстрока замены
// 
// Возвращаемое значение:
// 	Строка - Измененная строка
//
Функция ЗаменитьВсеВхождения(Знач ИсходнаяСтрока, Знач Шаблон, Знач ПодстрокаЗамены) Экспорт

	СвойстваВШаблоне = СвойстваИзШаблона(Шаблон);
	ОбъектРегулярноеВыражение = СоздатьОбъектРегулярногоВыражения(Шаблон, СвойстваВШаблоне);
	
	ИзмененнаяСтрока = ОбъектРегулярноеВыражение.Заменить(ИсходнаяСтрока, ПодстрокаЗамены);

	Возврат ИзмененнаяСтрока;

КонецФункции

// Найти первое вхождение.
// 
// Параметры:
//  ИсходнаяСтрока - Строка - Исходная строка
//  Шаблон - Строка - Шаблон регулярного выражения
//  Совпадения - Массив Из Произвольный - Результат поиска будет помещен в эту переменную
//  Флаги - Строка - Флаги регулярных выражений
// 
// Возвращаемое значение:
//  Булево - Есть найденные
//
Функция НайтиПервоеВхождение(ИсходнаяСтрока, Знач Шаблон, Совпадения = Неопределено, Флаги = "") Экспорт
	
	СвойстваВШаблоне = СвойстваИзШаблона(Шаблон);
	ОбъектРегулярноеВыражение = СоздатьОбъектРегулярногоВыражения(Шаблон, СвойстваВШаблоне);

	мСовпадения = ОбъектРегулярноеВыражение.НайтиСовпадения(ИсходнаяСтрока);
	Совпадения = Новый Массив;
	Для Каждого Совпадение Из мСовпадения Цикл
		Если Флаги = "PREG_OFFSET_CAPTURE" Тогда
			мЭлемент = Новый Массив;
			Для Каждого Группа Из Совпадение.Группы Цикл
				мЭлемент.Добавить(Группа.Значение);
				мЭлемент.Добавить(Группа.Индекс);
			КонецЦикла;
			Совпадения.Добавить(мЭлемент);
		Иначе
			Для Каждого Группа Из Совпадение.Группы Цикл
				Совпадения.Добавить(Группа.Значение);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;

	ЕстьНайденные = Совпадения.Количество() > 0;
	Возврат ЕстьНайденные;

КонецФункции

// Найти все вхождения.
// 
// Параметры:
//  ИсходнаяСтрока - Строка - Исходная строка
//  Шаблон - Строка - Шаблон регулярного выражения
//  Совпадения - Массив Из Произвольный - Результат поиска будет помещен в эту переменную
// 
// Возвращаемое значение:
//  Булево - Есть найденные
//
Функция НайтиВсеВхождения(Знач ИсходнаяСтрока, Знач Шаблон, Совпадения = Неопределено) Экспорт

	СвойстваВШаблоне = СвойстваИзШаблона(Шаблон);
	ОбъектРегулярноеВыражение = СоздатьОбъектРегулярногоВыражения(Шаблон, СвойстваВШаблоне);
	
	мСовпадения = ОбъектРегулярноеВыражение.НайтиСовпадения(ИсходнаяСтрока);
	Совпадения = Новый Массив;
	Для Каждого Совпадение Из мСовпадения Цикл
		Индекс = 0;
		Для Каждого Группа Из Совпадение.Группы Цикл
			Если Совпадения.Количество() < Индекс + 1 Тогда
				Совпадения.Добавить(Новый Массив);
			КонецЕсли;

			Совпадения[Индекс].Добавить(Группа.Значение);

			Индекс = Индекс + 1;
		КонецЦикла;
	КонецЦикла;

	ЕстьНайденные = Совпадения.Количество() > 0;
	Возврат ЕстьНайденные;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СвойстваИзШаблона(Шаблон)
	
	Результат = Новый Структура("Многострочный, ИгнорироватьРегистр");

	НайтиИУбратьСимволыСлева(Шаблон, "/");

	НайтиИУбратьСимволыСправа(Шаблон, "/");
	НайтиИУбратьСимволыСправа(Шаблон, "/us");
	НайтиИУбратьСимволыСправа(Шаблон, "/ui");	
	
	Результат.Многострочный = Не НайтиИУбратьСимволыСправа(Шаблон, "/s");
	Результат.ИгнорироватьРегистр = НайтиИУбратьСимволыСправа(Шаблон, "/i");

	Возврат Результат;

КонецФункции

Функция НайтиИУбратьСимволыСлева(Строка, Знач Символы)
	
	КоличествоСимволов = СтрДлина(Символы);
	ИзвлеченныеСимволы = Лев(Строка, КоличествоСимволов);
	Если ИзвлеченныеСимволы = Символы Тогда
		Строка = Прав(Строка, СтрДлина(Строка) - КоличествоСимволов);
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Функция НайтиИУбратьСимволыСправа(Строка, Знач Символы)
	
	КоличествоСимволов = СтрДлина(Символы);
	ИзвлеченныеСимволы = Прав(Строка, КоличествоСимволов);
	Если ИзвлеченныеСимволы = Символы Тогда
		Строка = Лев(Строка, СтрДлина(Строка) - КоличествоСимволов);
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
		
КонецФункции

Функция СоздатьОбъектРегулярногоВыражения(Знач Шаблон, Знач Параметры)

	ОбъектРегулярноеВыражение = Новый РегулярноеВыражение(Шаблон);
	ЗаполнитьЗначенияСвойств(ОбъектРегулярноеВыражение, Параметры);
	
	Возврат ОбъектРегулярноеВыражение;

КонецФункции

#КонецОбласти
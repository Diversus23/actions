#Использовать logos

// Лог системы
Перем Лог;

#Область ПрограммныйИнтерфейс

// Экспортирует проект EDT в формат XML 1С
//
// Параметры:
//  Параметры    - Структура     - структура для экспорта
//		* КаталогПроекта - Строка - Каталог исходников EDT
//		* КаталогЭкспорта - Строка - Каталог куда надо экспортировать
//		* КаталогПространства - Строка - Каталог пространства EDT
//		* ВерсияEDT - Строка - версия EDT
//
Процедура ЭкспортВXML1C(Знач Параметры) Экспорт
	
	// ring edt@%env.EDT_VERSION% workspace export
	//	--project "%system.teamcity.build.workingDir%\it"
	//	--configuration-files "%system.teamcity.build.workingDir%\build\config"
	//	--workspace-location "%system.teamcity.build.workingDir%"
	
	// Обязательное удаления слешей в конце пути
	КаталогПроекта = ФайловыеОперации.УдалитьПоследнийРазделительПути(Параметры.КаталогПроекта);
	КаталогЭкспорта = ФайловыеОперации.УдалитьПоследнийРазделительПути(Параметры.КаталогЭкспорта);
	КаталогПространства = Параметры.КаталогПространства;
	УдалитьКаталогПространства = Ложь;
	Если НЕ ЗначениеЗаполнено(КаталогПространства) Тогда
		КаталогПространства = ФайловыеОперации.ОбеспечитьВременныйКаталог();
		УдалитьКаталогПространства = Истина;
	КонецЕсли;
	КаталогПространства = ФайловыеОперации.УдалитьПоследнийРазделительПути(КаталогПространства);

	Лог = ПараметрыСистемы.Лог();
	Лог.Информация("Начало экспорта проекта 1C:Enterprise Development Tools в XML-файлы конфигурации 1С:Предприятия");
	Массив = Новый Массив();
	Массив.Добавить("ring");
	Если ЗначениеЗаполнено(Параметры.ВерсияEDT) Тогда
		Массив.Добавить("edt@" + Параметры.ВерсияEDT);
	Иначе
		Массив.Добавить("edt");
	КонецЕсли;
	Массив.Добавить("workspace export");
	Массив.Добавить("--project");
	Массив.Добавить("""" + КаталогПроекта + """");
	Массив.Добавить("--configuration-files");
	Массив.Добавить("""" + КаталогЭкспорта + """");
	Массив.Добавить("--workspace-location");
	Массив.Добавить("""" + КаталогПространства + """");

	ФайловыеОперации.ОбеспечитьПустойКаталог(КаталогЭкспорта);
	
	СтрокаЗапуска = СтрСоединить(Массив, " ");
	Лог.Информация("Выполняем команду:
					|================
					|%1
					|================", СтрокаЗапуска);
	
	КодВозврата = 0;
	ЗапуститьПриложение(СтрокаЗапуска, , Истина, КодВозврата);

	// Анализируем есть ли файл
	ТекстСОшибкой = "";
	ФайлКонфигурации = ОбъединитьПути(КаталогЭкспорта, "Configuration.xml");
	Если НЕ ФайловыеОперации.ФайлСуществует(ФайлКонфигурации) Тогда
		ФайлЛогов = ОбъединитьПути(КаталогПространства, ".metadata", ".log");
		ТекстСОшибкой = "Нет информации";
		Если ФайловыеОперации.ФайлСуществует(ФайлЛогов) Тогда
			ТекстСОшибкой = ФайловыеОперации.ПрочитатьТекстФайла(ФайлЛогов);
		КонецЕсли;
	КонецЕсли;

	Если УдалитьКаталогПространства Тогда
		Лог.Информация("Удаление временного каталога пространства");
		УдалитьФайлы(КаталогПространства);
		Лог.Информация("Временный каталог пространства удален");
	КонецЕсли;

	Если НЕ ПустаяСтрока(ТекстСОшибкой) Тогда
		ОбщегоНазначения.ЗавершениеРаботыОшибка("Экспорт проекта выполнен с ошибками. Проверьте параметр --edtversion.
												|Информация лога:
												|%1", ТекстСОшибкой);
	Иначе
		Лог.Информация("Экспорт проекта выполнен успешно");
	КонецЕсли;

КонецПроцедуры

// Получает из проекта EDT версию конфигурации.
//
// Параметры:
//	КаталогПроекта - Строка - Каталог исходников EDT
//
// Возвращаемое значение:
//	Строка - строка с версией. Пример: 3.1.16.6
//
Функция ВерсияКонфигурацииИзПроекта(Знач КаталогПроекта) Экспорт

	ШаблоныВерсий = Новый Массив;
	ШаблоныВерсий.Добавить("\d+\.\d+\.\d+\.\d+");
	ШаблоныВерсий.Добавить("\d+\.\d+\.\d+");
	ШаблоныВерсий.Добавить("\d+\.\d+");
	ШаблоныВерсий.Добавить("\d+");

	Версия = "";
	Файлы = НайтиФайлы(КаталогПроекта, "Configuration.mdo", Истина);
	Для Каждого мФайл Из Файлы Цикл
		Если мФайл.ЭтоФайл() Тогда
			Текст = ФайловыеОперации.ПрочитатьТекстФайла(мФайл.ПолноеИмя);
			Для Каждого Шаблон Из ШаблоныВерсий Цикл
				ШаблонВерсии = СтрШаблон("<version>(%1)<\/version>", Шаблон);
				Массив = ОбщегоНазначения.НайтиПоРегулярномуВыражению(Текст, ШаблонВерсии);
				Если Массив.Количество() > 1 Тогда				
					Возврат Массив[1];					
				КонецЕсли;			
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;	

	Возврат Версия;

КонецФункции

#КонецОбласти

Лог = ПараметрыСистемы.Лог();
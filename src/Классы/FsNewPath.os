#Область ПрограммныйИнтерфейс

// Процедура - устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект описание команды
//
Процедура ОписаниеКоманды(Команда) Экспорт
    
	Команда.Опция("path p", "",
		"Локальный каталог, который необходимо обеспечить и при необходимости создать (обязательный)")
		.ТСтрока();

	Команда.Опция("clear empty с e", "",
		"Если опция задана, то создаемый/созданный каталог будет рекусривно очищен")
		.ТБулево();		

КонецПроцедуры // ОписаниеКоманды()

// Процедура - запускает выполнение команды устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект  описание команды
//
Процедура ВыполнитьКоманду(Знач Команда) Экспорт
	
	ПараметрыКоманды = ПолучитьСтруктуруПараметров(Команда);
	Попытка
		Если ПараметрыКоманды.ОчищатьКаталог = Истина Тогда
			ФайловыеОперации.ОбеспечитьПустойКаталог(ПараметрыКоманды.Каталог);			
		Иначе
			ФайловыеОперации.ОбеспечитьКаталог(ПараметрыКоманды.Каталог);
		КонецЕсли;
	Исключение
		ОбщегоНазначения.ЗавершениеРаботыОшибка("Ошибка создания папки <%1>: %2", ПараметрыКоманды.Каталог, 
			ОписаниеОшибки());
	КонецПопытки;		
    
КонецПроцедуры // ВыполнитьКоманду()

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСтруктуруПараметров(Знач Команда)

	ЧтениеОпций = Новый ЧтениеОпцийКоманды(Команда);	
	ВыводОтладочнойИнформации = ЧтениеОпций.ЗначениеОпции("verbose");	
	ПараметрыСистемы.УстановитьРежимОтладки(ВыводОтладочнойИнформации);

	ПараметрыКоманды = Новый Структура;
	ПараметрыКоманды.Вставить("Каталог", ЧтениеОпций.ЗначениеОпции("path", Истина));
	ПараметрыКоманды.Вставить("ОчищатьКаталог", ЧтениеОпций.ЗначениеОпции("clear", Ложь));
	ПараметрыКоманды.Вставить("ОчищатьКаталог", ЗначениеЗаполнено(ПараметрыКоманды));

	Возврат ПараметрыКоманды; 

КонецФункции // ПолучитьСтруктуруПараметров()

#КонецОбласти // СлужебныеПроцедурыИФункции
#Область ПрограммныйИнтерфейс

// Процедура - устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект описание команды
//
Процедура ОписаниеКоманды(Команда) Экспорт
    
	Команда.Опция("path p", "",
		"Локальный каталог, где необходимо создать пустой временный каталог (не обязательный)")
		.ТСтрока();

КонецПроцедуры // ОписаниеКоманды()

// Процедура - запускает выполнение команды устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект  описание команды
//
Процедура ВыполнитьКоманду(Знач Команда) Экспорт
	
	ПараметрыКоманды = ПолучитьСтруктуруПараметров(Команда);

	СоздаватьИмя = Истина;
	Пока СоздаватьИмя Цикл
		// BSLLS:MissingTemporaryFileDeletion-off
		ИмяФайла = ПолучитьИмяВременногоФайла();
		Файл = Новый Файл(ИмяФайла);
		ПолноеИмя = ОбъединитьПути(ПараметрыКоманды.Каталог, Файл.ИмяБезРасширения);
		Если НЕ ФайловыеОперации.КаталогСуществует(ПолноеИмя) Тогда
			ФайловыеОперации.ОбеспечитьКаталог(ПолноеИмя);
			Сообщить(ПолноеИмя);
			СоздаватьИмя = Ложь;
		КонецЕсли;
		// BSLLS:MissingTemporaryFileDeletion-on
	КонецЦикла;
    
КонецПроцедуры // ВыполнитьКоманду()

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСтруктуруПараметров(Знач Команда)

	ЧтениеОпций = Новый ЧтениеОпцийКоманды(Команда);	
	ВыводОтладочнойИнформации = ЧтениеОпций.ЗначениеОпции("verbose");	
	ПараметрыСистемы.УстановитьРежимОтладки(ВыводОтладочнойИнформации);

	ПараметрыКоманды = Новый Структура;
	ПараметрыКоманды.Вставить("Каталог", ЧтениеОпций.ЗначениеОпции("path", Ложь, КаталогВременныхФайлов()));
	Возврат ПараметрыКоманды; 

КонецФункции // ПолучитьСтруктуруПараметров()

#КонецОбласти // СлужебныеПроцедурыИФункции
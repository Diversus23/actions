#Использовать 1connector

#Область ПрограммныйИнтерфейс

// Процедура - устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект описание команды
//
Процедура ОписаниеКоманды(Команда) Экспорт
    
	Команда.Опция("timeout interval t i", "",
		"Задает время в секундах, на которое программа будет установлена на паузу. По умолчанию 5 (не обязательный)")
		.ТЧисло();

КонецПроцедуры

// Процедура - запускает выполнение команды устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект  описание команды
//
Процедура ВыполнитьКоманду(Знач Команда) Экспорт
    
	Параметры = ПолучитьСтруктуруПараметров(Команда);
	Лог = ПараметрыСистемы.Лог();
	Милисекунды = 1000;
	ВремяОжидания = Параметры.Таймаут * Милисекунды;
	Лог.Информация("Начало паузы %1 сек.", Параметры.Таймаут);
	Приостановить(ВремяОжидания);
	Лог.Информация("Пауза окончена");
        
КонецПроцедуры

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСтруктуруПараметров(Знач Команда)

	ЧтениеОпций = Новый ЧтениеОпцийКоманды(Команда);	
	ВыводОтладочнойИнформации = ЧтениеОпций.ЗначениеОпции("verbose");	
	ПараметрыСистемы.УстановитьРежимОтладки(ВыводОтладочнойИнформации);

	ПараметрыКоманды = Новый Структура;
	ПараметрыКоманды.Вставить("Таймаут", ЧтениеОпций.ЗначениеОпции("timeout", Ложь, 5));

	Возврат ПараметрыКоманды;

КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
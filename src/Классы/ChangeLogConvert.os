#Область ПрограммныйИнтерфейс

// Процедура - устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект описание команды
//
Процедура ОписаниеКоманды(Команда) Экспорт
	
	Команда.Опция("in i", "",
		"Исходный файл ChangeLog.md в формате MarkDown из которого необходимо получить описание")
		.ТСтрока();

	Команда.Опция("out o", "",
		"Файл с новостью по обновлению из исходного файла в формате HTML или TXT в зависимости от расширения файла")
		.ТСтрока();
	
	Команда.Опция("format f", "",
		"Формат генерации документации. Поддерживается txt, html, htmlfull, htmlall, htmlfullall")
		.ТПеречисление()
		.Перечисление(Перечисления.ФорматChangeLog.Текст,
			Перечисления.ФорматChangeLog.Текст, 
			"Документация в формате TXT")
		.Перечисление(Перечисления.ФорматChangeLog.КраткийHTML,
			Перечисления.ФорматChangeLog.КраткийHTML, 
			"Документация в кратком формате HTML. Все, что внутри тегов body")
		.Перечисление(Перечисления.ФорматChangeLog.ПолныйHTML,
			Перечисления.ФорматChangeLog.ПолныйHTML, 
			"Документация в полном формате HTML. Готовый HTML-файл со всеми стилями и с полным оформлением")
		.Перечисление(Перечисления.ФорматChangeLog.КраткийHTMLВсе,
			Перечисления.ФорматChangeLog.КраткийHTMLВсе, 
			"Документация в формате HTML. Файл конвертируется полностью")
		.Перечисление(Перечисления.ФорматChangeLog.ПолныйHTMLВсе,
			Перечисления.ФорматChangeLog.ПолныйHTMLВсе, 
			"Документация в формате HTML. Готовый HTML-файл со всеми стилями и с полным оформлением. Файл конвертируется полностью");

	Команда.Опция("version", "",
		"Из какой версии будет получено описание. Если не задано, то будет получено по последней (необязательный)")
		.ТСтрока();
		
КонецПроцедуры // ОписаниеКоманды()

// Процедура - запускает выполнение команды устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект  описание команды
//
Процедура ВыполнитьКоманду(Знач Команда) Экспорт
		
	СтруктураПараметров = ПолучитьСтруктуруПараметров(Команда);
	РаботаСChangeLog.Конвертировать(СтруктураПараметров);
	
КонецПроцедуры // ВыполнитьКоманду()

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСтруктуруПараметров(Знач Команда)
	
	ЧтениеОпций = Новый ЧтениеОпцийКоманды(Команда);	
	ВыводОтладочнойИнформации = ЧтениеОпций.ЗначениеОпции("verbose");	
	ПараметрыСистемы.УстановитьРежимОтладки(ВыводОтладочнойИнформации);

	ПараметрыКоманды = Новый Структура;
	ПараметрыКоманды.Вставить("ИсходныйФайл", ЧтениеОпций.ЗначениеОпции("in", Истина));
	ПараметрыКоманды.Вставить("ФайлРезультат", ЧтениеОпций.ЗначениеОпции("out", Истина));
	Формат = ЧтениеОпций.ЗначениеОпции("format", Ложь, Перечисления.ФорматChangeLog.КраткийHTML);
	ПараметрыКоманды.Вставить("Формат", Формат);
	ПараметрыКоманды.Вставить("Версия", ЧтениеОпций.ЗначениеОпции("version"));
	
	Возврат ПараметрыКоманды;
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
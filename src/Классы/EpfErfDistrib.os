#Область ПрограммныйИнтерфейс

// Процедура - устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект описание команды
//
Процедура ОписаниеКоманды(Команда) Экспорт

	Команда.Опция("version", "",
		"Версия релиза (обязательный)")
		.ТСтрока();

	Команда.Опция("path p", "",
		"Каталог где будет создан дистрибутив (обязательный)")
		.ТСтрока();

	Команда.Опция("files f", "",
		"Список файлов, которые нужно включить в дистрибутив или маска файлов разделенные "";"" (обязательный)")
		.ТСтрока();

	Команда.Опция("prefix", "",
		"Префикс продукта (не обязательный)")
		.ТСтрока();		

	Команда.Опция("shared_path", "",
		"Общие файлы для создаваемого дистрибутива, которые будут включены в дистрибутив (не обязательный)")
		.ТСтрока();		

КонецПроцедуры // ОписаниеКоманды()

// Процедура - запускает выполнение команды устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект  описание команды
//
Процедура ВыполнитьКоманду(Знач Команда) Экспорт
	
	Параметры = ПолучитьСтруктуруПараметров(Команда);
	Лог = ПараметрыСистемы.Лог();
	
	Лог.Информация("Начало создания архива дистрибутива ");

	ИмяФайла = Строка(Параметры.Префикс) + "_" + СтрЗаменить(Параметры.Версия, ".", "_") + "_full.zip";
	ИмяФайлаАрхива = ОбъединитьПути(Параметры.Каталог, ИмяФайла);

	Файлы = Параметры.Файлы;
	Если НЕ ПустаяСтрока(Параметры.ОбщиеФайлы) Тогда
		Файлы = Файлы + ";" + Параметры.ОбщиеФайлы;
	КонецЕсли;

	ЗаписьZIP = Новый ЗаписьZipФайла(ИмяФайлаАрхива);
	МассивМасок =  СтроковыеОперации.РазложитьСтрокуВМассивПодстрок(Параметры.Файлы, ";", Истина, Истина);
	Для Каждого МаскаДобавляемогоФайлаПапки Из МассивМасок Цикл
		Лог.Информация("Добавление файла (каталога) <" +  МаскаДобавляемогоФайлаПапки + ">");
		ЗаписьZIP.Добавить(МаскаДобавляемогоФайлаПапки,
			РежимСохраненияПутейZIP.СохранятьОтносительныеПути,
			РежимОбработкиПодкаталоговZIP.ОбрабатыватьРекурсивно);
	КонецЦикла;
	ЗаписьZIP.Записать();

	ИмяФайлаОбновления = Параметры.Префикс + "_" + СтрЗаменить(Параметры.Версия, ".", "_") + "_upd.zip";
	ИмяФайлаОбновления = ОбъединитьПути(Параметры.Каталог, ИмяФайлаОбновления);
	КопироватьФайл(ИмяФайлаАрхива, ИмяФайлаОбновления);

	Лог.Информация("Создание архива дистрибутива завершено");	
	
КонецПроцедуры // ВыполнитьКоманду()

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСтруктуруПараметров(Знач Команда)
	
	ЧтениеОпций = Новый ЧтениеОпцийКоманды(Команда);
	ВыводОтладочнойИнформации = ЧтениеОпций.ЗначениеОпции("verbose");
	ПараметрыСистемы.УстановитьРежимОтладки(ВыводОтладочнойИнформации);
	
	ПараметрыКоманды = Новый Структура;
	ПараметрыКоманды.Вставить("Версия", ЧтениеОпций.ЗначениеОпции("version", Истина));	
	ПараметрыКоманды.Вставить("Каталог", ЧтениеОпций.ЗначениеОпции("path", Истина));
	ПараметрыКоманды.Вставить("Файлы", ЧтениеОпций.ЗначениеОпции("files", Истина));
	ПараметрыКоманды.Вставить("Префикс", ЧтениеОпций.ЗначениеОпции("prefix", Ложь));
	ПараметрыКоманды.Вставить("ОбщиеФайлы", ЧтениеОпций.ЗначениеОпции("shared_path", Ложь));
	
	Если Не ЗначениеЗаполнено(ПараметрыКоманды.Префикс) Тогда
		ПараметрыКоманды.Префикс = "";
	КонецЕсли;

	ТекстОшибки = "Каталог ""%1"" не существует";
	Если НЕ ФайловыеОперации.КаталогСуществует(ПараметрыКоманды.Каталог) Тогда
		ОбщегоНазначения.ЗавершениеРаботыОшибка(ТекстОшибки, ПараметрыКоманды.Каталог);
	КонецЕсли;

	Возврат ПараметрыКоманды;
	
КонецФункции // ПолучитьСтруктуруПараметров()

#КонецОбласти // СлужебныеПроцедурыИФункции
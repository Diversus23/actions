#Использовать v8runner

Перем мНастройки, мЭтоФайловаяБаза, мЭтоСервернаяБаза;

Процедура ЗарегистрироватьКоманду(Знач ИмяКоманды, Знач Парсер) Экспорт
	
	мЭтоФайловаяБаза = НРег(ИмяКоманды) = "createibfile";
	мЭтоСервернаяБаза = НРег(ИмяКоманды) = "createibserver";
	Если НЕ мЭтоСервернаяБаза И НЕ мЭтоФайловаяБаза Тогда
		ВызватьИсключение("Непредусмотренная команда");
	КонецЕсли;
	
	Если мЭтоФайловаяБаза Тогда
		ТекстОписаниеКоманды = "Создание файловой информационной базы 1C в каталоге";
	Иначе
		ТекстОписаниеКоманды = "Создание серверной информационной базы на сервере 1С";
	КонецЕсли;
	
	ОписаниеКоманды = Парсер.ОписаниеКоманды(ИмяКоманды, ТекстОписаниеКоманды);
	Парсер.ДобавитьКоманду(ОписаниеКоманды);
	
	Парсер.ДобавитьПозиционныйПараметрКоманды(ОписаниеКоманды, "Действие", "file|server");
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить("-ibconnection");
	МассивПараметров.Добавить("-addinlist");
	МассивПараметров.Добавить("-template");
	Если мЭтоСервернаяБаза Тогда
		МассивПараметров.Добавить("-db-user");
		МассивПараметров.Добавить("-db-pwd");
		МассивПараметров.Добавить("-dbms");
		МассивПараметров.Добавить("-cluster-user");
		МассивПараметров.Добавить("-cluster-pwd");
		МассивПараметров.Добавить("-db-srvr");
		МассивПараметров.Добавить("-sql-offs");
		МассивПараметров.Добавить("-createdb");
		МассивПараметров.Добавить("-allowschjob");
		МассивПараметров.Добавить("-allowlicdstr");
		МассивПараметров.Добавить("-dbms");
	КонецЕсли;
	ОбщегоНазначения.РегистрацияОбщихПараметровV8(ОписаниеКоманды, Парсер, МассивПараметров);
	
КонецПроцедуры

Функция ВыполнитьКоманду(Знач Параметры) Экспорт
	
	Лог = ПараметрыСистемы.ПолучитьЛог();
	ТекстЛога = СтрШаблон("Начало создания %1 ИБ 1С", ?(мЭтоСервернаяБаза, "серверной", "файловой"));
	Лог.Информация(ТекстЛога);
	
	ДанныеПодключения = Параметры["ДанныеПодключения"];
	ВозможныйРезультат = МенеджерКомандПриложения.РезультатыКоманд();
	
	УправлениеКонфигуратором = ОбщегоНазначения.НастроитьКонфигуратор(Параметры);
	ИмяВСпискеБаз = Параметры["-addinlist"];
	ПутьКШаблону = Параметры["-template"];
	
	Если мЭтоСервернаяБаза Тогда
		
		Параметры1С = Новый Структура();
		ПараметрыСУБД = Новый Структура();
		АвторизацияВКластере = Новый Структура();
		
		Параметры1С.Вставить("Сервер1С", Параметры["-ib-srvr"]);
		Параметры1С.Вставить("ИмяИБ", Параметры["-ib-ref"]);
		Параметры1С.Вставить("РазрешитьВыдачуЛицензий", Параметры["-allowlicdstr"]);
		Параметры1С.Вставить("РазрешитьРегЗадания", Параметры["-allowschjob"]);
		
		ПараметрыСУБД.Вставить("ТипСУБД", Параметры["-dbms"]);
		ПараметрыСУБД.Вставить("СерверСУБД", Параметры["-db-srvr"]);
		ПараметрыСУБД.Вставить("ПользовательСУБД", Параметры["-db-user"]);
		ПараметрыСУБД.Вставить("ПарольСУБД", Параметры["-db-pwd"]);
		ПараметрыСУБД.Вставить("ИмяБД", Параметры["-db-name"]);
		ПараметрыСУБД.Вставить("СмещениеДат", Параметры["-sql-offs"]);
		ПараметрыСУБД.Вставить("СоздаватьБД", Параметры["-createdb"]);
		
		АвторизацияВКластере.Вставить("Имя", Параметры["-cluster-user"]);
		АвторизацияВКластере.Вставить("Пароль", Параметры["-cluster-pwd"]);
		
		ОшибкаЕслиСуществует = Истина;
		
		Если ПустаяСтрока(Параметры1С.Сервер1С) Тогда
			Лог.Ошибка("Не указан адрес кластера серверов 1С");
			Возврат ВозможныйРезультат.НеверныеПараметры;
		КонецЕсли;
		
		Если ПустаяСтрока(Параметры1С.ИмяИБ) Тогда
			Лог.Ошибка("Не указано имя базы в кластере 1С");
			Возврат ВозможныйРезультат.НеверныеПараметры;
		КонецЕсли;
		
		Если ПустаяСтрока(ПараметрыСУБД.ТипСУБД) Тогда
			ПараметрыСУБД.ТипСУБД = "MSSQLServer";
		КонецЕсли;
		
		Если ПустаяСтрока(ПараметрыСУБД.СерверСУБД) Тогда
			Лог.Ошибка("Не указан адрес сервера СУБД");
			Возврат ВозможныйРезультат.НеверныеПараметры;
		КонецЕсли;
		
		Если ПустаяСтрока(ПараметрыСУБД.ПользовательСУБД) Тогда
			Лог.Ошибка("Не указан пользователь сервера СУБД");
			Возврат ВозможныйРезультат.НеверныеПараметры;
		КонецЕсли;
		
		Если ПустаяСтрока(ПараметрыСУБД.ИмяБД) Тогда
			ПараметрыСУБД.ИмяБД = Параметры1С.ИмяИБ;
			Лог.Информация("Не указано имя базы на сервере СУБД, будет использовано имя ИБ - ""%1""", ПараметрыСУБД.ИмяБД);
		КонецЕсли;
		
		Если ПустаяСтрока(ПараметрыСУБД.СмещениеДат) Тогда
			ПараметрыСУБД.СмещениеДат = "2000";
		КонецЕсли;
		
		Лог.Информация("Сервер 1С: " + Параметры1С.Сервер1С);
		Лог.Информация("Имя базы 1С: " + Параметры1С.ИмяИБ);
		Лог.Информация("Сервер БД " + ПараметрыСУБД.ТипСУБД + ": " + ПараметрыСУБД.СерверСУБД);
		Лог.Информация("Имя базы БД: " + ПараметрыСУБД.ИмяБД);
		
		Попытка
			УправлениеКонфигуратором.СоздатьСервернуюБазу(Параметры1С, ПараметрыСУБД, АвторизацияВКластере,
				ОшибкаЕслиСуществует, ПутьКШаблону, ИмяВСпискеБаз);
			Лог.Информация("Создание ИБ завершено");
		Исключение
			Лог.Ошибка("Произошла ошибка при создание ИБ на сервере " + УправлениеКонфигуратором.ВыводКоманды());
			Возврат ВозможныйРезультат.ОшибкаВремениВыполнения;
		КонецПопытки;
		
	Иначе
		
		Лог.Информация("Каталог " + ДанныеПодключения.КаталогИБ);
		Попытка
			УправлениеКонфигуратором.СоздатьФайловуюБазу(ДанныеПодключения.КаталогИБ, ПутьКШаблону, ИмяВСпискеБаз);
			Лог.Информация("Создание ИБ завершено");
		Исключение
			Лог.Ошибка("Произошла ошибка при создании файловой ИБ " + УправлениеКонфигуратором.ВыводКоманды());
			Возврат ВозможныйРезультат.ОшибкаВремениВыполнения;
		КонецПопытки;
		
	КонецЕсли;
	
	Возврат ВозможныйРезультат.Успех;
	
КонецФункции

Процедура ПрочитатьПараметры(Знач Параметры)
	
	мНастройки = Новый Структура;
	Лог = ПараметрыСистемы.Лог;
	
	Для Каждого КЗ Из Параметры Цикл
		Лог.Отладка(КЗ.Ключ + " = " + КЗ.Значение);
	КонецЦикла;
	
	мНастройки.Вставить("СтрокаСоединения", Параметры["-ibconnection"]);
	
КонецПроцедуры

Функция ПараметрыВведеныКорректно()
	
	Если мНастройки.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(мНастройки.Свойство("СтрокаСоединения")) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции
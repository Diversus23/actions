#Область ПрограммныйИнтерфейс

// Процедура - устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект описание команды
//
Процедура ОписаниеКоманды(Команда) Экспорт
		
	// Добавление дополнительных опций
	ПараметрыОпций = Работа1С.КонструкторОбщий();
	Работа1С.ОписаниеКоманды(Команда, ПараметрыОпций);	
	
	Команда.Опция("file f", "",
		"Путь к файлу с кодом, который надо выполнить (обязательный)")
		.ТСтрока();
	
	Команда.Опция("code text txt", "",
		"Произвольный код, который надо выполнить (не обязательный)")
		.ТБулево();

КонецПроцедуры // ОписаниеКоманды()

// Процедура - запускает выполнение команды устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект  описание команды
//
Процедура ВыполнитьКоманду(Знач Команда) Экспорт

	Лог = ПараметрыСистемы.Лог();
	Лог.Информация("Выполнение произвольного кода");

	Параметры = ПолучитьСтруктуруПараметров(Команда);
	МенеджерКонфигуратора = Новый МенеджерКонфигуратора();
	МенеджерКонфигуратора.Инициализация(Параметры);
	
	ВыполняемыйКод = "";
	Если НЕ ПустаяСтрока(Параметры.ПутьКФайлу) Тогда
		ВыполняемыйКод = ФайловыеОперации.ПрочитатьТекстФайла(Параметры.ПутьКФайлу);
	Иначе
		ВыполняемыйКод = Параметры.ВыполняемыйКод;
	КонецЕсли;
	
	Код = 
	"Попытка
	|	Результат.Вставить(""Успешно"", Ложь);
	|	" + ВыполняемыйКод + "
	|	Результат.Успешно = Истина;
	|Исключение
	|	Результат.ТекстОшибки = СтрШаблон(""Не удалось выполнить код: %1"",
	|		ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	|КонецПопытки;";
	Результат = МенеджерКонфигуратора.ВыполнитьПроизвольныйКодВРежимеПредприятия(Код);
	Если Результат.Успешно = Истина Тогда
		Лог.Информация("Выполнение произвольного кода успешно выполнено");
	Иначе
		ОбщегоНазначения.ЗавершениеРаботыОшибка("Выполнение произвольного кода не выполнено");
	КонецЕсли;

	МенеджерКонфигуратора.Деструктор();
	
КонецПроцедуры // ВыполнитьКоманду()

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСтруктуруПараметров(Знач Команда)
	
	ЧтениеОпций = Новый ЧтениеОпцийКоманды(Команда);
	ВыводОтладочнойИнформации = ЧтениеОпций.ЗначениеОпции("verbose");
	ПараметрыСистемы.УстановитьРежимОтладки(ВыводОтладочнойИнформации);
	
	ПараметрыОпций = Работа1С.КонструкторОбщий();

	ПараметрыКоманды = Работа1С.ПрочитатьПараметры(Команда, ПараметрыОпций);	
	ПараметрыКоманды.Вставить("ПутьКФайлу", ЧтениеОпций.ЗначениеОпции("file", Ложь));
	ПараметрыКоманды.Вставить("ВыполняемыйКод", ЧтениеОпций.ЗначениеОпции("code", Ложь));

	Если ЗначениеЗаполнено(ПараметрыКоманды.ПутьКФайлу) 
		И НЕ ФайловыеОперации.ФайлСуществует(ПараметрыКоманды.ПутьКФайлу) Тогда
		ОбщегоНазначения.ЗавершениеРаботыОшибка("Файл <%1> не найден", ПараметрыКоманды.ПутьКФайлу);
	КонецЕсли;

	Если ЗначениеЗаполнено(ПараметрыКоманды.ВыполняемыйКод) 
		И ЗначениеЗаполнено(ПараметрыКоманды.ПутьКФайлу) Тогда
		ОбщегоНазначения.ЗавершениеРаботыОшибка("Необходимо указание либо параметра ""--code"", либо ""--file""");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрыКоманды.ВыполняемыйКод) 
		И НЕ ЗначениеЗаполнено(ПараметрыКоманды.ПутьКФайлу) Тогда
		ОбщегоНазначения.ЗавершениеРаботыОшибка("Необходимо указание одного из параметров ""--code"" или ""--file""");
	КонецЕсли;

	Возврат ПараметрыКоманды;
	
КонецФункции // ПолучитьСтруктуруПараметров()

#КонецОбласти // СлужебныеПроцедурыИФункции
#Использовать 1connector
#Использовать 1commands

#Область ПрограммныйИнтерфейс

// Процедура - устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект описание команды
//
Процедура ОписаниеКоманды(Команда) Экспорт
	
	Команда.Опция("path p", "",
		"Каталог с результатами Allure (обязательный)")
		.ТСтрока();

	Команда.Опция("url u", "",
		"URL сервера Allure (обязательный)")
		.ТСтрока();

	Команда.Опция("project", "",
		"Имя проекта на сервере Allure (обязательный)")
		.ТСтрока();

КонецПроцедуры // ОписаниеКоманды()

// Процедура - запускает выполнение команды устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект  описание команды
//
Процедура ВыполнитьКоманду(Знач Команда) Экспорт
		
	Параметры = ПолучитьСтруктуруПараметров(Команда);

	Массив = Новый Массив;
	Файлы = НайтиФайлы(Параметры.Каталог, "*.json", Истина);
	Для Каждого Файл Из Файлы Цикл
		//Текст = ФайловыеОперации.ПрочитатьТекстФайла(Файл.ПолноеИмя);
		ДвоичныеДанные = Новый ДвоичныеДанные(Файл.ПолноеИмя);
		Структура = Новый Структура("file_name, content_base64", Файл.Имя, Base64Строка(ДвоичныеДанные));
		Массив.Добавить(Структура);
	КонецЦикла;
	Результат = Новый Структура("results", Массив);
	//ОбщегоНазначения.ВывестиПеременнуюВКонсоль(Результат);
	Json = РаботаJSON.СтруктураВJSON(Результат);
	//Сообщить(Json);

	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/json");	

	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Заголовки", Заголовки);

	// ToDo: Переделать адрес сервера  + "/"
	Адрес = Параметры.АдресСервера + "/" + "allure-docker-service/send-results?force_project_creation=true&project_id=" + Параметры.Проект;
	// Ответ = КоннекторHTTP.Post(Адрес, Неопределено, Json, ДополнительныеПараметры);
	// Сообщить(Ответ.Текст());

	// Отправка даных на сервер
	КомандаРК = Новый Команда;
	КомандаРК.УстановитьКоманду("curl");
	КомандаРК.ДобавитьПараметр("-X");
	КомандаРК.ДобавитьПараметр("POST");
	КомандаРК.ДобавитьПараметр(ФайловыеОперации.ОбернутьПутьВКавычки(Адрес));
	КомандаРК.ДобавитьПараметр("-H");
	КомандаРК.ДобавитьПараметр("""Content-Type: application/json""");
	КомандаРК.ДобавитьПараметр("-d");
	КомандаРК.ДобавитьПараметр("""" + СтрЗаменить(Json, """", "\""") + """");
	КомандаРК.УстановитьИсполнениеЧерезКомандыСистемы(Ложь);
	КомандаРК.ПоказыватьВыводНемедленно(Ложь);	
	КодВозврата = КомандаРК.Исполнить();
	ОписаниеРезультата = КомандаРК.ПолучитьВывод();

	Если СтрНайти(ОписаниеРезультата, "successfully") = Неопределено Тогда
		ОбщегоНазначения.ЗавершениеРаботыОшибка("Ошибка отправки данных на сервер Allure: %1", ОписаниеРезультата);
	КонецЕсли;

КонецПроцедуры // ВыполнитьКоманду()

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСтруктуруПараметров(Знач Команда)
	
	ЧтениеОпций = Новый ЧтениеОпцийКоманды(Команда);	
	ВыводОтладочнойИнформации = ЧтениеОпций.ЗначениеОпции("verbose");	
	ПараметрыСистемы.УстановитьРежимОтладки(ВыводОтладочнойИнформации);

	ПараметрыКоманды = Новый Структура;
	ПараметрыКоманды.Вставить("Каталог", ЧтениеОпций.ЗначениеОпции("path", Истина));
	ПараметрыКоманды.Вставить("АдресСервера", ЧтениеОпций.ЗначениеОпции("url", Истина));
	ПараметрыКоманды.Вставить("Проект", ЧтениеОпций.ЗначениеОпции("project", Истина));

	Возврат ПараметрыКоманды;
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
#Область ПрограммныйИнтерфейс

// Процедура - устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект описание команды
//
Процедура ОписаниеКоманды(Команда) Экспорт
    
	Команда.Опция("in i", "",
		"Исходный файл, который необходимо обфусцировать (обязательный)")
		.ТСтрока();

    Команда.Опция("out o", "",
		"Куда сохранить обфусцированный файл. Если не задан, то исходный файл будет заменен обфусцированным (необязательный)")
		.ТСтрока();
    
	Команда.Опция("apikey a", "",
		"API-ключ, который можно найти на сайте сервиса. Пример: 23412341A4..12FDA (обязательный)")
		.ТСтрока();

КонецПроцедуры

// Процедура - запускает выполнение команды устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект  описание команды
//
Процедура ВыполнитьКоманду(Знач Команда) Экспорт
    	
	СтруктураПараметров = ПолучитьСтруктуруПараметров(Команда);
    Обфускация.ОбфускацияФайла1С(СтруктураПараметров);
        
КонецПроцедуры

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСтруктуруПараметров(Знач Команда)

	ЧтениеОпций = Новый ЧтениеОпцийКоманды(Команда);	
	ВыводОтладочнойИнформации = ЧтениеОпций.ЗначениеОпции("verbose");	
	ПараметрыСистемы.УстановитьРежимОтладки(ВыводОтладочнойИнформации);

	ПараметрыКоманды = Новый Структура;
	ПараметрыКоманды.Вставить("ИсходныйФайл", ЧтениеОпций.ЗначениеОпции("in", Истина));
    Если НЕ ФайловыеОперации.ФайлСуществует(ПараметрыКоманды.ИсходныйФайл) Тогда
		ТекстОшибки = "Файл для обфускации <" + ПараметрыКоманды.ИсходныйФайл + "> не существует";
        ОбщегоНазначения.ЗавершениеРаботыОшибка(ТекстОшибки);
    КонецЕсли;    
	ПараметрыКоманды.Вставить("ФайлРезультат", ЧтениеОпций.ЗначениеОпции("out"));
	Если НЕ ЗначениеЗаполнено(ПараметрыКоманды.ФайлРезультат) Тогда
		ПараметрыКоманды.ФайлРезультат = ПараметрыКоманды.ИсходныйФайл;
	КонецЕсли;
	КлючAPI = ЧтениеОпций.ЗначениеОпции("apikey");
	Если НЕ ЗначениеЗаполнено(КлючAPI) Тогда
		ТекстОшибки = "Не заполнена опция ""--apikey"" - ключ API пользователя на сайте https://netlenka.org в профиле";
        ОбщегоНазначения.ЗавершениеРаботыОшибка(ТекстОшибки);
	КонецЕсли;

	НастройкиОбфускации = Обфускация.КонструкторОбфускацииОбщегоМодуля();
	НастройкиОбфускации.Вставить("ApiKey", КлючAPI);
    ПараметрыКоманды.Вставить("НастройкиОбфускации", НастройкиОбфускации);

	Возврат ПараметрыКоманды;

КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
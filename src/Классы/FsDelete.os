#Область ПрограммныйИнтерфейс

// Процедура - устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект описание команды
//
Процедура ОписаниеКоманды(Команда) Экспорт
    
	Команда.Опция("path p", "",
		"Локальный каталог (обязательный)")
		.ТСтрока();

	Команда.Опция("mask m", "",
		"Маска файлов. По умолчанию ""*"" (не обязательный)")
		.ТСтрока();

	Команда.Опция("errorifnotexist e", "",
		"Вызывать ошибку, если каталог не найден. По умолчанию ""Ложь"" (не обязательный)")
		.ТБулево();

КонецПроцедуры // ОписаниеКоманды()

// Процедура - запускает выполнение команды устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект  описание команды
//
Процедура ВыполнитьКоманду(Знач Команда) Экспорт
	
	Лог = ПараметрыСистемы.Лог();
	ПараметрыКоманды = ПолучитьСтруктуруПараметров(Команда);
	Если ФайловыеОперации.КаталогСуществует(ПараметрыКоманды.Каталог) Тогда
		
		Лог.Информация("Начало удаления каталога/файлов: %1%2", ПараметрыКоманды.Каталог, ПараметрыКоманды.Маска);
		Попытка
			Маска = ПараметрыКоманды.Маска;
			Если ЗначениеЗаполнено(Маска) Тогда
				УдалитьФайлы(ПараметрыКоманды.Каталог, ПараметрыКоманды.Маска);
			Иначе
				УдалитьФайлы(ПараметрыКоманды.Каталог);
			КонецЕсли;
			Лог.Информация("Каталог/файлы удалены: %1%2", ПараметрыКоманды.Каталог, ПараметрыКоманды.Маска);
		Исключение
			ОбщегоНазначения.ЗавершениеРаботыОшибка("Ошибка при удалении каталога <%1%2>:%3", 
				ПараметрыКоманды.Каталог,
				ПараметрыКоманды.Маска,
				ОписаниеОшибки());
		КонецПопытки;

	Иначе

		Текст = СтрШаблон("Каталог/файлы не найдены для удаления: %1%2",
			ПараметрыКоманды.Каталог,
			ПараметрыКоманды.Маска);

		Если ЗначениеЗаполнено(ПараметрыКоманды.ОшибкаЕслиКаталогНеНайден) Тогда
			ОбщегоНазначения.ЗавершениеРаботыОшибка(Текст);
			
		Иначе
			Лог.Информация(Текст);
		КонецЕсли;

	КонецЕсли;
    
КонецПроцедуры // ВыполнитьКоманду()

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСтруктуруПараметров(Знач Команда)

	ЧтениеОпций = Новый ЧтениеОпцийКоманды(Команда);	
	ВыводОтладочнойИнформации = ЧтениеОпций.ЗначениеОпции("verbose");	
	ПараметрыСистемы.УстановитьРежимОтладки(ВыводОтладочнойИнформации);

	ПараметрыКоманды = Новый Структура;
	ПараметрыКоманды.Вставить("Каталог", ЧтениеОпций.ЗначениеОпции("path", Истина));
	ПараметрыКоманды.Вставить("Маска", ЧтениеОпций.ЗначениеОпции("mask"));
	ПараметрыКоманды.Вставить("ОшибкаЕслиКаталогНеНайден", ЧтениеОпций.ЗначениеОпции("errorifnotexist"));	
	Возврат ПараметрыКоманды; 

КонецФункции // ПолучитьСтруктуруПараметров()

#КонецОбласти // СлужебныеПроцедурыИФункции
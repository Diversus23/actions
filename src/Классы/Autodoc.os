#Использовать asserts

#Область ПрограммныйИнтерфейс

// Процедура - устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект описание команды
//
Процедура ОписаниеКоманды(Команда) Экспорт
    
	Команда.Опция("file f", "",
		"Путь к файлу, куда сохранить документацию (обязательный)")
		.ТСтрока();

КонецПроцедуры

// Процедура - запускает выполнение команды устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект  описание команды
//
Процедура ВыполнитьКоманду(Знач Команда) Экспорт
    
	СтруктураПараметров = ПолучитьСтруктуруПараметров(Команда);
	АвтосборкаДокументации(СтруктураПараметров);
    
КонецПроцедуры

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСтруктуруПараметров(Знач Команда)

	ЧтениеОпций = Новый ЧтениеОпцийКоманды(Команда);	
	ВыводОтладочнойИнформации = ЧтениеОпций.ЗначениеОпции("verbose");	
	ПараметрыСистемы.УстановитьРежимОтладки(ВыводОтладочнойИнформации);

	ПараметрыКоманды = Новый Структура;
	ПараметрыКоманды.Вставить("ИмяФайла", ЧтениеОпций.ЗначениеОпции("file", Истина));
	Возврат ПараметрыКоманды; 

КонецФункции

Процедура АвтосборкаДокументации(Знач Параметры)
	
	Лог = ПараметрыСистемы.ПолучитьЛог();
	Лог.Информация("Начало обновления документации");

	ГлавнаяКоманда = ПараметрыСистемы.Приложение.ПолучитьКоманду();
	Таблица = Новый ТаблицаЗначений();
	Таблица.Колонки.Добавить("Имя");
	Таблица.Колонки.Добавить("Описание");
	Таблица.Колонки.Добавить("ДополнениеОписания");
	Таблица.Колонки.Добавить("Опции");
	Таблица.Колонки.Добавить("Аргументы");
	Таблица.Колонки.Добавить("Уровень");
	Таблица.Колонки.Добавить("Команда");
	Таблица.Колонки.Добавить("Заголовок");
	ПолучитьТаблицуКоманд(ГлавнаяКоманда, Таблица, Неопределено, 0);
	
	Текст = ТекстовоеОписаниеКоманд(Таблица);
	ТекстовыйДокумент = Новый ТекстовыйДокумент();
	ТекстовыйДокумент.УстановитьТекст(Текст);
	ТекстовыйДокумент.Записать(Параметры.ИмяФайла);

	Лог.Информация("Окончание обновления документации");

КонецПроцедуры

Процедура ПолучитьТаблицуКоманд(Команда, Таблица, Родитель, Уровень)

	ОписаниеКоманды = Таблица.Добавить();
	ОписаниеКоманды.Имя = Команда.ПолучитьИмяКоманды();
	ОписаниеКоманды.Заголовок = "";
	Если Родитель <> Неопределено Тогда
		ОписаниеКоманды.Заголовок = Родитель.Заголовок;
	КонецЕсли;
	Если Уровень > 0 Тогда
		ОписаниеКоманды.Заголовок = СокрЛП(ОписаниеКоманды.Заголовок + " " + ОписаниеКоманды.Имя);
	КонецЕсли;
	ОписаниеКоманды.Описание = Команда.ПолучитьОписание();	
	ОписаниеКоманды.Опции = Команда.ПолучитьТаблицуОпций();
	ОписаниеКоманды.Аргументы = Команда.ПолучитьТаблицуАргументов();
	ОписаниеКоманды.Уровень = Уровень;
	ОписаниеКоманды.Команда = Команда;	
	Попытка
		ИмяМакета = ОписаниеКоманды.Заголовок;
		Если ПустаяСтрока(ИмяМакета) Тогда
			ИмяМакета = "actions";			
		КонецЕсли;
		ОписаниеКоманды.ДополнениеОписания = ОбщегоНазначения.ПрочитатьДанныеИзМакета(ИмяМакета);
	Исключение
		ОписаниеКоманды.ДополнениеОписания = "";
	КонецПопытки;	

	Для Каждого ВозможнаяКоманда Из Команда.ПолучитьПодкоманды() Цикл
		ПолучитьТаблицуКоманд(ВозможнаяКоманда, Таблица, ОписаниеКоманды, Уровень + 1);
	КонецЦикла;

КонецПроцедуры

Функция Отступы(Уровень)

	Коэффициент = 2;
	Результат = "";
	Возврат СтроковыеОперации.ДополнитьСтроку(Результат, Уровень * Коэффициент, " ", "Слева");

КонецФункции

Функция ПрефиксЗаголовка(Уровень)

	НачальныйИндекс = 2;
	Результат = "";
	Возврат СтроковыеОперации.ДополнитьСтроку(Результат, Уровень + НачальныйИндекс, "#", "Слева");
	
КонецФункции

Функция ОписаниеПараметра(Параметр)

	ПС = Символы.ПС;
	ДС = ПС + ПС;

	Результат = "- *" + Параметр.Наименование + "*: " + ПривестиКMarkDown(Параметр.Описание) + ".";
	Если НЕ ПустаяСтрока(Параметр.ПодробноеОписание) Тогда
		Результат = Результат + ПС + Параметр.ПодробноеОписание;
	КонецЕсли;
	Если Параметр.НаименованияПараметров.Количество() > 1 Тогда
		Результат = Результат + ПС + СтрШаблон("Синонимы: [%1].", СтрСоединить(Параметр.НаименованияПараметров, ", "));
	КонецЕсли;
	Если ЗначениеЗаполнено(Параметр.Значение) И Параметр.СкрытьЗначение = Ложь Тогда
		Результат = Результат + ПС + СтрШаблон("Значение по умолчанию: ""%1"".", Строка(Параметр.Значение));
	КонецЕсли;
	Результат = СтрЗаменить(Результат, ДС, ПС);

	Возврат Результат;

КонецФункции

Функция ПривестиКMarkDown(Знач Стр)

	Результат = Стр;
	Результат = СтрЗаменить(Результат, "*", "\*");
	Возврат Результат;

КонецФункции

Функция ТекстовоеОписаниеКоманд(ВозможныеКоманды)
	
	ПС = Символы.ПС;
	ДС = ПС + ПС;
	
	Результат = "# Описание команд" + ДС;
	
	Результат = Результат + "<!-- TOC -->" + ДС;
	Для Каждого ОписаниеКоманды Из ВозможныеКоманды Цикл

		ИмяКоманды = ОписаниеКоманды.Имя;
		СсылкаКоманды = СтрЗаменить(ОписаниеКоманды.Заголовок, " ", "-");
		Текст = СтрШаблон("%1- [%2](#%3) %4", Отступы(ОписаниеКоманды.Уровень), ИмяКоманды, СсылкаКоманды, 
			ОписаниеКоманды.Описание);
		Результат = Результат + Текст + ПС;

	КонецЦикла;	
	Результат = Результат + ПС + "<!-- /TOC -->" + ДС;
		
	Для Каждого ОписаниеКоманды Из ВозможныеКоманды Цикл
		
		Заголовок = ОписаниеКоманды.Заголовок;
		Если ПустаяСтрока(Заголовок) Тогда
			Заголовок = ПараметрыСистемы.ИмяПриложения();
		КонецЕсли;

		// Команда и пояснение
		Результат = Результат + ПрефиксЗаголовка(ОписаниеКоманды.Уровень) + " " + Заголовок 
			+ ДС + ОписаниеКоманды.Описание + "." + ДС;
		
		// Проверка аргументов команды
		КоличествоАргументов = ОписаниеКоманды.Аргументы.Количество();
		Ожидаем.Что(КоличествоАргументов, "Autodoc.ТекстовоеОписаниеКоманд: есть аргументы: " + Заголовок).Равно(0);
		
		// Опции команды
		ТекстПараметры = "";
		Для Каждого Параметр Из ОписаниеКоманды.Опции Цикл
			ТекстПараметры = ТекстПараметры	+ ОписаниеПараметра(Параметр) + ПС;
		КонецЦикла;
		Если НЕ ПустаяСтрока(ТекстПараметры) Тогда
			Результат = Результат + ПрефиксЗаголовка(ОписаниеКоманды.Уровень + 1) + " Опции команды" + ДС;
			Результат = Результат + ТекстПараметры;
			Результат = Результат + ПС;
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(ОписаниеКоманды.ДополнениеОписания) Тогда
			Результат = Результат + ОписаниеКоманды.ДополнениеОписания + ДС;
		КонецЕсли;

		Результат = Результат + "---" + ДС;

	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
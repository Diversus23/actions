#Использовать v8runner

#Область ПрограммныйИнтерфейс

// Процедура - устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект описание команды
//
Процедура ОписаниеКоманды(Команда) Экспорт

	Команда.Опция("path p", "",
		"Путь где будет осуществлен поиск и добавление тегов в feature-файлах (обязательный)")
		.ТСтрока();

	Команда.Опция("prefix", "",
		"Префикс добавляемого тега, который надо заменить во feature-файлах. По умолчанию ""tag"" (не обязательный)")
		.ТСтрока();

	Команда.Опция("max count m c", "",
		"Количество групп на которое надо разбить feature-файлы. По умолчанию ""3"" (не обязательный)")
		.ТЧисло();

	Текст = СтрШаблон("%1 %2", 
		"Новый тег будет добавлен, если в feature-файле будут найдены указанные теги-фильтры.",
		"Можно задать несколько через запятую (не обязательный)");
	Команда.Опция("filtertags ft", "", Текст)
		.ТСтрока();		

КонецПроцедуры // ОписаниеКоманды()

// Процедура - запускает выполнение команды устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект  описание команды
//
Процедура ВыполнитьКоманду(Знач Команда) Экспорт
	
	Параметры = ПолучитьСтруктуруПараметров(Команда);

	Лог = ПараметрыСистемы.Лог();
	Лог.Информация("Начало разбиения feature-файлов в каталоге <%1> на <%2> групп с префиксом ""%3""", Параметры.Путь,
		Параметры.Префикс, Параметры.КоличествоГрупп);

	Файлы = НайтиФайлы(Параметры.Путь, "*.feature", Истина);
	НомерТега = 1;
	Для Каждого Файл Из Файлы Цикл
		КраткоеОписание = СтрЗаменить(НРег(Файл.ПолноеИмя), НРег(Параметры.Путь), "");
		КраткоеОписание = Прав(Файл.ПолноеИмя, СтрДлина(КраткоеОписание));
		Фильтр = Новый Структура("ПоискПоТегам", Параметры.ПоискПоТегам);		
		Если ДобавитьТег(Файл.ПолноеИмя, Параметры.Префикс, Фильтр, НомерТега) Тогда
			Лог.Информация("Добавлен тег ""%1%2"" в <%3>", Параметры.Префикс,
				Формат(НомерТега, "ЧГ=0"), КраткоеОписание);				
			НомерТега = НомерТега % Параметры.КоличествоГрупп + 1;
		Иначе
			Лог.Предупреждение("<%1> проигнорирован", КраткоеОписание);
		КонецЕсли;
	КонецЦикла;

	Лог.Информация("Завершение замены тегов в feature-файлах");
	
КонецПроцедуры // ВыполнитьКоманду()

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСтруктуруПараметров(Знач Команда)
	
	ЧтениеОпций = Новый ЧтениеОпцийКоманды(Команда);
	ВыводОтладочнойИнформации = ЧтениеОпций.ЗначениеОпции("verbose");
	ПараметрыСистемы.УстановитьРежимОтладки(ВыводОтладочнойИнформации);
	
	ПараметрыКоманды = Новый Структура();
	ПараметрыКоманды.Вставить("Путь", ЧтениеОпций.ЗначениеОпции("path", Истина));
	ПараметрыКоманды.Вставить("Префикс", ЧтениеОпций.ЗначениеОпции("prefix", Ложь, "tag"));
	ПараметрыКоманды.Вставить("КоличествоГрупп", ЧтениеОпций.ЗначениеОпции("max", Ложь, 3));
	ПараметрыКоманды.Вставить("ПоискПоТегам", ЧтениеОпций.ЗначениеОпции("filtertags"));
	Если НЕ СтрНачинаетсяС(ПараметрыКоманды.Префикс, "@") Тогда
		ПараметрыКоманды.Префикс = "@" + ПараметрыКоманды.Префикс;
	КонецЕсли;
	Если ПараметрыКоманды.КоличествоГрупп <= 0 Тогда
		ОбщегоНазначения.ЗавершениеРаботыОшибка("Количество групп ""--max"" должно быть больше нуля");
	КонецЕсли;

	Возврат ПараметрыКоманды;
	
КонецФункции // ПолучитьСтруктуруПараметров()

Функция ДобавитьТег(Знач ИмяФайла, Знач Префикс, Знач Фильтр, Знач НомерТега)
	
	// Готовим фильтр по тегу
	Если ЗначениеЗаполнено(Фильтр.ПоискПоТегам) Тогда
		Фильтр.Вставить("ПоискПоТегамНайден", Ложь);
		Фильтр.ПоискПоТегам = НРег(СокрЛП(Фильтр.ПоискПоТегам));
		МассивПоискПоТегам = СтрРазделить(Фильтр.ПоискПоТегам, ",", Ложь);
		Для Индекс = 0 По МассивПоискПоТегам.Количество() - 1 Цикл
			МассивПоискПоТегам[Индекс] = СокрЛП(МассивПоискПоТегам[Индекс]);
			Если НЕ СтрНачинаетсяС(МассивПоискПоТегам[Индекс], "@") Тогда
				МассивПоискПоТегам[Индекс] = "@" + МассивПоискПоТегам[Индекс];
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;

	Текст = ФайловыеОперации.ПрочитатьТекстФайла(ИмяФайла);
	Результат = "";
	ТегДобавлен = Ложь;
	
	Для Индекс = 1 По СтрЧислоСтрок(Текст) Цикл
		Стр = СтрПолучитьСтроку(Текст, Индекс);
		нСтр = СокрЛП(НРег(Стр));
		Результат = Результат + Стр + Символы.ПС;
		Если ТегДобавлен = Ложь И НЕ СтрНачинаетсяС(СокрЛП(Стр), "#") Тогда
			Результат = Результат + Префикс + Формат(НомерТега, "ЧГ=0") + Символы.ПС;
			ТегДобавлен = Истина;
		КонецЕсли;

		// Проверки, что есть теги, которые надо проигнорировать
		Если нСтр = "@exportscenarios" ИЛИ нСтр = "@ignoreoncimainbuild" ИЛИ нСтр = "@draft" Тогда
			Возврат Ложь;
		КонецЕсли;

		Если ЗначениеЗаполнено(Фильтр.ПоискПоТегам) Тогда
			Если МассивПоискПоТегам.Найти(нСтр) <> Неопределено Тогда
				Фильтр.ПоискПоТегамНайден = Истина;
			КонецЕсли;
		КонецЕсли;

	КонецЦикла;

	Если ЗначениеЗаполнено(Фильтр.ПоискПоТегам) Тогда
		Если НЕ Фильтр.ПоискПоТегамНайден Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;

	ФайловыеОперации.ЗаписатьТекстФайла(ИмяФайла, Результат);
	Возврат Истина;

КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
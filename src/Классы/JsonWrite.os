#Область ПрограммныйИнтерфейс

// Процедура - устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект описание команды
//
Процедура ОписаниеКоманды(Команда) Экспорт

	Команда.Опция("key k", "",
		"Имя ключа в точечной нотации. Пример ""zip.add"" - добавит {""zip"": {""add"": ""value""}} (обязательный)")
		.ТСтрока();

	Команда.Опция("string str s", "",
		"Значение-строка")
		.ТСтрока();

	Команда.Опция("number num n", "",
		"Значение-число")
		.ТЧисло();

		Команда.Опция("boolean bool b", "",
		"Значение-булево (True/False, 1/0, Истина/Ложь)")
		.ТСтрока();

	Команда.Опция("date d", "",
		"Значение-дата в формате yyyy-MM-dd_HH:mm:ss")
		.ТДата();

	Команда.Опция("file f", "",
		"Имя файла json. Если не задано, то будет дозапись в файл settings.json.
		|Если файла нет, он будет создан (не обязательный)")
		.ТСтрока();		

КонецПроцедуры // ОписаниеКоманды()

// Процедура - запускает выполнение команды устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект  описание команды
//
Процедура ВыполнитьКоманду(Знач Команда) Экспорт
	
	СтруктураПараметров = ПолучитьСтруктуруПараметров(Команда);	
	ОбщегоНазначения.ЗаписатьНастройкуВФайл(СтруктураПараметров.ИмяФайла, СтруктураПараметров.Ключ,
		СтруктураПараметров.Значение);
    
КонецПроцедуры // ВыполнитьКоманду()

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСтруктуруПараметров(Знач Команда)

	ЧтениеОпций = Новый ЧтениеОпцийКоманды(Команда);	
	ВыводОтладочнойИнформации = ЧтениеОпций.ЗначениеОпции("verbose");	
	ПараметрыСистемы.УстановитьРежимОтладки(ВыводОтладочнойИнформации);

	ПараметрыКоманды = Новый Структура;
	ПараметрыКоманды.Вставить("Ключ", ЧтениеОпций.ЗначениеОпции("key", Истина));
	Значение = ЧтениеОпций.ЗначениеОпции("string");
	Если НЕ ЗначениеЗаполнено(Значение) Тогда
		Значение = ЧтениеОпций.ЗначениеОпции("number");
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Значение) Тогда
		ЗначениеБулево = ЧтениеОпций.ЗначениеОпции("boolean");
		Если ЗначениеЗаполнено(ЗначениеБулево) Тогда
			ЗначениеБулево = НРег(СокрЛП(ЗначениеБулево));
			Значение = ЗначениеБулево = "true" ИЛИ ЗначениеБулево = "истина" ИЛИ ЗначениеБулево = "1";
		КонецЕсли;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Значение) Тогда
		Значение = ЧтениеОпций.ЗначениеОпции("date");
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Значение) Тогда
		ТекстОшибки = "Не задано значение ключа. Один из параметров на выбор: --string, --number, --boolean, --date";
		ОбщегоНазначения.ЗавершениеРаботыОшибка(ТекстОшибки);
	КонецЕсли;

	ПараметрыКоманды.Вставить("Значение", Значение);

	ИмяФайла = ЧтениеОпций.ЗначениеОпции("file");
	Если ЗначениеЗаполнено(ИмяФайла) Тогда
		ПараметрыКоманды.Вставить("ИмяФайла", ИмяФайла);
	Иначе
		ИмяФайла = ОбъединитьПути(ТекущийКаталог(), ПараметрыСистемы.ИмяФайлаНастроек());
	КонецЕсли;
	ПараметрыКоманды.Вставить("ИмяФайла", ИмяФайла);

	Возврат ПараметрыКоманды; 

КонецФункции // ПолучитьСтруктуруПараметров()

#КонецОбласти // СлужебныеПроцедурыИФункции
#Область ПрограммныйИнтерфейс

// Процедура - устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект описание команды
//
Процедура ОписаниеКоманды(Команда) Экспорт
		
	Команда.Опция("path p", "",
		"Каталог с файлом модуля где указана версия (обязательный)")
		.ТСтрока();
		
КонецПроцедуры // ОписаниеКоманды()

// Процедура - запускает выполнение команды устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект  описание команды
//
Процедура ВыполнитьКоманду(Знач Команда) Экспорт
	
	ПараметрыКоманды = ПолучитьСтруктуруПараметров(Команда);
	Версия = РаботаEDT.ВерсияОтчетаОбработкиИзПроекта(ПараметрыКоманды.Каталог);
	Если ПустаяСтрока(Версия) Тогда		
		ОбщегоНазначения.ЗавершениеРаботыОшибка("Версия обработки/отчета не найдена");
	КонецЕсли;
	Сообщить(Версия);
	
КонецПроцедуры // ВыполнитьКоманду()

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСтруктуруПараметров(Знач Команда)
	
	ЧтениеОпций = Новый ЧтениеОпцийКоманды(Команда);
	ВыводОтладочнойИнформации = ЧтениеОпций.ЗначениеОпции("verbose");
	ПараметрыСистемы.УстановитьРежимОтладки(ВыводОтладочнойИнформации);
	
	ПараметрыКоманды = Новый Структура;
	ПараметрыКоманды.Вставить("Каталог", ЧтениеОпций.ЗначениеОпции("path", Истина));
	
	ТекстОшибки = "Каталог ""%1"" не существует";
	Если НЕ ФайловыеОперации.КаталогСуществует(ПараметрыКоманды.Каталог) Тогда
		ОбщегоНазначения.ЗавершениеРаботыОшибка(ТекстОшибки, ПараметрыКоманды.Каталог);
	КонецЕсли;

	Возврат ПараметрыКоманды;
	
КонецФункции // ПолучитьСтруктуруПараметров()

#КонецОбласти // СлужебныеПроцедурыИФункции
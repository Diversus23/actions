#Область ПрограммныйИнтерфейс

// Процедура - устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект описание команды
//
Процедура ОписаниеКоманды(Команда) Экспорт
	
	Команда.Опция("project j", "",
		"Каталог, содержащий проект 1C:Enterprise Development Tools (обязательный)")
		.ТСтрока();
	
	Команда.Опция("path p", "",
		"Каталог куда необходимо сохранить файлы конфигурации платформы 1С:Предприятия в формате XML (обязательный)")
		.ТСтрока();
	
	Команда.Опция("workspace w", "",
		"Каталог рабочего простанства для запуска 1C:Enterprise Development Tools (обязательный)")
		.ТСтрока();
	
	Текст = СтрШаблон("%1 %2", 
		"Версия EDT для экспорта. Пример: ""2021.1.5:x86_64""",
		"Список установленных версий можно узнать набрав ""ring help modules"" (необязательный)");
	Команда.Опция("edtversion e", "", Текст)
		.ТСтрока();
	
КонецПроцедуры // ОписаниеКоманды()

// Процедура - запускает выполнение команды устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект  описание команды
//
Процедура ВыполнитьКоманду(Знач Команда) Экспорт
	
	ПараметрыКоманды = ПолучитьСтруктуруПараметров(Команда);
	// ring edt@%env.EDT_VERSION% workspace export
	//	--project "%system.teamcity.build.workingDir%\it"
	//	--configuration-files "%system.teamcity.build.workingDir%\build\config"
	//	--workspace-location "%system.teamcity.build.workingDir%"
	
	Лог = ПараметрыСистемы.Лог();
	Лог.Информация("Начало экспорта проекта 1C:Enterprise Development Tools в XML-файлы конфигурации 1С:Предприятия");
	Массив = Новый Массив();
	Массив.Добавить("ring");
	Если ЗначениеЗаполнено(ПараметрыКоманды.ВерсияEDT) Тогда
		Массив.Добавить("edt@" + ПараметрыКоманды.ВерсияEDT);
	Иначе
		Массив.Добавить("edt");
	КонецЕсли;
	Массив.Добавить("workspace export");
	Массив.Добавить("--project");
	Массив.Добавить("""" + ПараметрыКоманды.КаталогПроекта + """");
	Массив.Добавить("--configuration-files");
	Массив.Добавить("""" + ПараметрыКоманды.КаталогЭкспорта + """");
	Массив.Добавить("--workspace-location");
	Массив.Добавить("""" + ПараметрыКоманды.КаталогПространства + """");
	
	СтрокаЗапуска = СтрСоединить(Массив, " ");
	Лог.Информация(СтрокаЗапуска);
	
	КодВозврата = 0;
	ЗапуститьПриложение(СтрокаЗапуска, , Истина, КодВозврата);
	
	Если КодВозврата > 0 Тогда
		Лог.Информация("Экспорт проекта выполнен с ошибками");
	Иначе
		Лог.Информация("Экспорт проекта выполнен успешно");
	КонецЕсли;
	
КонецПроцедуры // ВыполнитьКоманду()

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСтруктуруПараметров(Знач Команда)
	
	ЧтениеОпций = Новый ЧтениеОпцийКоманды(Команда);
	ВыводОтладочнойИнформации = ЧтениеОпций.ЗначениеОпции("verbose");
	ПараметрыСистемы.УстановитьРежимОтладки(ВыводОтладочнойИнформации);
	
	ПараметрыКоманды = Новый Структура;
	ПараметрыКоманды.Вставить("КаталогПроекта", ЧтениеОпций.ЗначениеОпции("project", Истина));
	ПараметрыКоманды.Вставить("КаталогЭкспорта", ЧтениеОпций.ЗначениеОпции("path", Истина));
	ПараметрыКоманды.Вставить("КаталогПространства", ЧтениеОпций.ЗначениеОпции("workspace", Истина));
	ПараметрыКоманды.Вставить("ВерсияEDT", ЧтениеОпций.ЗначениеОпции("edtversion"));
	
	ПараметрыКоманды.КаталогПроекта =
		ФайловыеОперации.УбратьВСтрокеСлешВКонце(ПараметрыКоманды.КаталогПроекта);
	ПараметрыКоманды.КаталогЭкспорта =
		ФайловыеОперации.УбратьВСтрокеСлешВКонце(ПараметрыКоманды.КаталогЭкспорта);
	ПараметрыКоманды.КаталогПространства =
		ФайловыеОперации.УбратьВСтрокеСлешВКонце(ПараметрыКоманды.КаталогПространства);
	
	Возврат ПараметрыКоманды;
	
КонецФункции // ПолучитьСтруктуруПараметров()

#КонецОбласти // СлужебныеПроцедурыИФункции
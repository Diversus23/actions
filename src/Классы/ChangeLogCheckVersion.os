#Область ПрограммныйИнтерфейс

// Процедура - устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект описание команды
//
Процедура ОписаниеКоманды(Команда) Экспорт	

	Команда.Опция("file f", "", 
		"Имя файла ChangeLog.md в формате MarkDown, в котором необходимо проверить наличие версии")
		.ТСтрока();

	Команда.Опция("version", "", 
		"Версия в файле")
		.ТСтрока();		
	
КонецПроцедуры // ОписаниеКоманды()

// Процедура - запускает выполнение команды устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект  описание команды
//
Процедура ВыполнитьКоманду(Знач Команда) Экспорт
	
	СтруктураПараметров = ПолучитьСтруктуруПараметров(Команда);
	НаличиеВерсии = РаботаСChangeLog.ПроверитьНаличиеВерсии(СтруктураПараметров.ИмяФайла, СтруктураПараметров.Версия);
	Если НаличиеВерсии = Ложь Тогда
		ТекстОшибки = "Версия ""%1"" - не найдена в файле ""%2""";
		ОбщегоНазначения.ЗавершениеРаботыОшибка(ТекстОшибки, СтруктураПараметров.Версия, СтруктураПараметров.ИмяФайла);
	КонецЕсли;
	
КонецПроцедуры // ВыполнитьКоманду()

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСтруктуруПараметров(Знач Команда)

	ЧтениеОпций = Новый ЧтениеОпцийКоманды(Команда);	
	ВыводОтладочнойИнформации = ЧтениеОпций.ЗначениеОпции("verbose");	
	ПараметрыСистемы.УстановитьРежимОтладки(ВыводОтладочнойИнформации);

	ПараметрыКоманды = Новый Структура;
	ПараметрыКоманды.Вставить("ИмяФайла", ЧтениеОпций.ЗначениеОпции("file", Истина));
	ПараметрыКоманды.Вставить("Версия", ЧтениеОпций.ЗначениеОпции("version", Истина));
	Возврат ПараметрыКоманды; 

КонецФункции // ПолучитьСтруктуруПараметров()

#КонецОбласти // СлужебныеПроцедурыИФункции
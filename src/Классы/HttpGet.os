#Использовать 1connector

// Сколько параметров можно передать через командную строку. По умолчанию 10.
Перем МаксимальноеКоличествоПараметров;

#Область ПрограммныйИнтерфейс

// Процедура - устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект описание команды
//
Процедура ОписаниеКоманды(Команда) Экспорт
		
	Команда.Опция("url address u", "", 
		"URL-адрес HTTP-запроса (обязательный)")
		.ТСтрока();

	Команда.Опция("format f", "", 
		"В каком формате ожидаем ответ. По умолчанию text (не обязательный)")
		.ТПеречисление()
		.Перечисление(Перечисления.ФорматОтветаGet.Текст,
			Перечисления.ФорматОтветаGet.Текст,
			"Текст")
		.Перечисление(Перечисления.ФорматОтветаGet.JSON,
			Перечисления.ФорматОтветаGet.JSON,
			"JSON")
		.Перечисление(Перечисления.ФорматОтветаGet.ДвоичныеДанные,
			Перечисления.ФорматОтветаGet.ДвоичныеДанные,
			"Двоичные данные");

	Команда.Опция("out o", "", 
		"В какой файл сохранить результат. Если не задано, результат будет выведен в консоль (не обязательный)")
		.ТСтрока();

	Команда.Опция("login l", "", 
		"Логин Basic-аутентификации (не обязательный)")
		.ТСтрока();		

	Команда.Опция("password p", "", 
		"Пароль Basic-аутентификации (не обязательный)")
		.ТСтрока();		
		
	Для Индекс = 1 По МаксимальноеКоличествоПараметров Цикл
		ИндексСтрокой = ИндексСтрокой(Индекс);

		ИмяПараметраПолное = ИмяПараметраПолное(Индекс);
		ИмяПараметраАльтернативное = "par" + ИндексСтрокой;
		ИмяПараметраКраткое = "p" + ИндексСтрокой;
		Текст = СтрШаблон("Параметр %1 HTTP-запроса (необязательный)", ИндексСтрокой);
		Команда.Опция(ИмяПараметраПолное + " " + ИмяПараметраАльтернативное + " " + ИмяПараметраКраткое, "", 
			Текст)
			.ТСтрока();

		ИмяЗначенияПолное = ИмяЗначениеПолное(Индекс);
		ИмяЗначенияАльтернативное = "val" + ИндексСтрокой;
		ИмяЗначенияКраткое = "v" + ИндексСтрокой;
		Текст = СтрШаблон("Значение параметра %1 HTTP-запроса (необязательный)", ИндексСтрокой);
		Команда.Опция(ИмяЗначенияПолное + " " + ИмяЗначенияАльтернативное + " " + ИмяЗначенияКраткое, "",
			Текст)
			.ТСтрока();			
	КонецЦикла;

КонецПроцедуры // ОписаниеКоманды()

// Процедура - запускает выполнение команды устанавливает описание команды
//
// Параметры:
//  Команда    - КомандаПриложения     - объект  описание команды
//
Процедура ВыполнитьКоманду(Знач Команда) Экспорт
	
	Лог = ПараметрыСистемы.Лог();

	ПараметрыКоманды = ПолучитьСтруктуруПараметров(Команда);		
	ПараметрыСтрокой = "";
	ПараметрыЗапроса = Новый Структура;
	Для Индекс = 1 По МаксимальноеКоличествоПараметров Цикл
		Если ПараметрыКоманды.Свойство(ИмяПараметраПолное(Индекс))
			И ПараметрыКоманды.Свойство(ИмяЗначениеПолное(Индекс)) Тогда
			ПараметрыЗапроса.Вставить(ПараметрыКоманды[ИмяПараметраПолное(Индекс)], 
				ПараметрыКоманды[ИмяЗначениеПолное(Индекс)]);

			Если НЕ ПустаяСтрока(ПараметрыСтрокой) Тогда
				ПараметрыСтрокой = ПараметрыСтрокой + "&";
			КонецЕсли;
			ПараметрыСтрокой = ПараметрыСтрокой + ПараметрыКоманды[ИмяПараметраПолное(Индекс)] 
				+ "=" + ПараметрыКоманды[ИмяЗначениеПолное(Индекс)];
		КонецЕсли;
	КонецЦикла;

	ПолныйАдресЗапроса = ПараметрыКоманды.Адрес 
		+ ?(СтрНайти(ПараметрыКоманды.Адрес, "?") > 0, "&", "?") 
		+ ПараметрыСтрокой;

	Лог.Отладка("Выполняю get-запрос к странице %1", ПолныйАдресЗапроса);

	Пользователь = ПараметрыКоманды["Пользователь"];
	Пароль = ПараметрыКоманды["Пароль"];
	ДопПараметры = Новый Структура();
	Если ЗначениеЗаполнено(Пользователь) Тогда
		Аутентификация = Новый Структура();
		Аутентификация.Вставить("Пользователь", Пользователь);		
		Аутентификация.Вставить("Пароль", Пароль);
		ДопПараметры = Новый Структура("Аутентификация", Аутентификация);
		Лог.Отладка("Baisic-аутентификация. Пользователь %1 Пароль ***", Пользователь);
	КонецЕсли;
		
	Ответ = КоннекторHTTP.Get(ПараметрыКоманды.Адрес, ПараметрыЗапроса, ДопПараметры);	

	Если ЗначениеЗаполнено(ПараметрыКоманды["Файл"]) Тогда
		Если ПараметрыКоманды.Формат = Перечисления.ФорматОтветаGet.ДвоичныеДанные Тогда
			Результат = Ответ.ДвоичныеДанные();
			Результат.Записать(ПараметрыКоманды.Файл);
		ИначеЕсли ПараметрыКоманды.Формат = Перечисления.ФорматОтветаGet.JSON Тогда
			Результат = Ответ.Json();
			ОбщегоНазначения.ЗаписатьФайлJSON(ПараметрыКоманды.Файл, Результат);
		Иначе
			Результат = Ответ.Текст();
			ФайловыеОперации.ЗаписатьТекстФайла(ПараметрыКоманды.Файл, Результат);
		КонецЕсли;			
	Иначе
		Результат = Ответ.Текст();
		Сообщить(Результат);
	КонецЕсли;
	
КонецПроцедуры // ВыполнитьКоманду()

#КонецОбласти // ПрограммныйИнтерфейс

#Область ОбработчикиСобытий

Процедура ПриСозданииОбъекта()

	МаксимальноеКоличествоПараметров = 10;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСтруктуруПараметров(Знач Команда)
		
	ЧтениеОпций = Новый ЧтениеОпцийКоманды(Команда);	
	ВыводОтладочнойИнформации = ЧтениеОпций.ЗначениеОпции("verbose");	
	ПараметрыСистемы.УстановитьРежимОтладки(ВыводОтладочнойИнформации);

	ПараметрыКоманды = Новый Структура;
	ПараметрыКоманды.Вставить("Адрес", ЧтениеОпций.ЗначениеОпции("url", Истина));
	ПараметрыКоманды.Вставить("Формат", ЧтениеОпций.ЗначениеОпции("format", Ложь, Перечисления.ФорматОтветаGet.Текст));
	ПараметрыКоманды.Вставить("Файл", ЧтениеОпций.ЗначениеОпции("out"));
	ПараметрыКоманды.Вставить("Пользователь", ЧтениеОпций.ЗначениеОпции("login"));
	ПараметрыКоманды.Вставить("Пароль", ЧтениеОпций.ЗначениеОпции("password"));
	Для Индекс = 1 По МаксимальноеКоличествоПараметров Цикл
		ИмяПараметраПолное = ИмяПараметраПолное(Индекс);
		ИмяЗначенияПолное = ИмяЗначениеПолное(Индекс);

		ИмяПараметра = ЧтениеОпций.ЗначениеОпции(ИмяПараметраПолное);
		ЗначениеПараметра = ЧтениеОпций.ЗначениеОпции(ИмяЗначенияПолное);		

		ПараметрЗаполнен = ЗначениеЗаполнено(ИмяПараметра) И ЗначениеЗаполнено(ЗначениеПараметра);
		Если ПараметрЗаполнен Тогда
			ПараметрыКоманды.Вставить(ИмяПараметраПолное, ИмяПараметра);
			ПараметрыКоманды.Вставить(ИмяЗначенияПолное, ЗначениеПараметра);
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;

	Возврат ПараметрыКоманды; 
	
КонецФункции // ПолучитьСтруктуруПараметров()

Функция ИндексСтрокой(Знач Индекс)

	Возврат Формат(Индекс, "ЧГ=0");	

КонецФункции

Функция ИмяПараметраПолное(Знач Индекс)

	Возврат СтрШаблон("param%1", ИндексСтрокой(Индекс));

КонецФункции

Функция ИмяЗначениеПолное(Знач Индекс)

	Возврат СтрШаблон("value%1", ИндексСтрокой(Индекс));

КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции